print("x")
val x = 10
var x = 10
numero <- 10
print(numero)
numero <- 10 * 20
print(numero)
numero <- 10 / 20
print(numero)
outro_numero <- numero + 9
print(outro_numero)
lista <- c(7,8,9,10,6)
mean(lista)
summary(lista)
lista <- c(1,2,3,4,5)
summary(list)
summary(lista)
lista <- c(1,2,3,4,5,6,7,8)
summary(lista)
install.packages("RMySQL")
mydb = dbConnect(MySQL(), user='user', password='password', dbname='database_name', host='host')
library(RMySQL)
install.packages("RMySQL")
library(RMySQL)
mydb = dbConnect(MySQL(), user='user', password='password', dbname='database_name', host='host')
c('a', 'b')
a <- c('a', 'b')
mean(a)
c(1,7:9)
c(1:5, 10.5, "next")
1:5
5:50
teste <- 'a'
teste <- "a"
print(teste)
teste <- 'a'
print(teste)
teste <- "tais"
teste <- "thais"
teste[0:1]
teste[0]
print(teste[1])
print(teste[0])
print(teste[1:1])
print(teste[0])
if teste == "thais"
if teste == "thais"
priceCalculator <- function(hours, pph=40){
net.price <- hours * pph
if(hours > 100) {
net.price <- net.price * 0.9
}
round(net.price)
}
priceCalculator(50)
priceCalculator <- function(hours, pph=40){
net.price <- hours * pph
if(hours > 100) {
net.price <- net.price * 0.9
}
round(net.price)
}
funcao_teste <- function(a){}
funcao_teste <- function(a){
a * 2
}
funcao_teste(1)
funcao_teste('a')
teste <- c(1,2,3)
mean(teste)
teste <- c(1,2,3h <- hash() )
h <- hash()
h[c("1", "foo")]
h <- hash()
mean(teste)
median(teste)
summary(teste)
for (year in c(2010,2011,2012,2013,2014,2015)){
print(paste("The year is", year))
}
for (number in c(1,2,3,4,5) ) {
print(“o número é: “, number))
}
for (number in c(1,2,3,4,5) ) {
print(paste(“o número é: “, number)))
}
for (number in c(1,2,3,4,5) ) {
print(“o número é: “, number))
}
for (number in c(1,2,3,4,5) ) {
print(“o numero eh: “, number))
}
for (number in c(1,2,3,4,5) ) {
print(number)
}
i <- 1
while (i < 6) {
print(i)
i = i+1
}
I <- 1
while (i < 6) {
print(i)
i = i+1
}
i <- 1
while (i < 6) {
print(i)
i = i+1
}
t <- (1,2,3)
t <- c(1,2,3)
sum(t)
min(t)
count(t)
max(t)
lista <- c(1,2)
lista[1]
lista[0]
lista[2]
lista[55]
lista[1:2]
lista[1:]
lista[1:-1]
lista[1:]
lista[1:1]
lista[1:2]
h <- hash()
typeof(lista)
list <-c (1)
typeof(list)
# library
library(ggplot2)
# The iris dataset is proposed by R
head(iris)
# basic scatterplot
ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width)) +
geom_point()
a <- available.packages()
a
a <- available.packages()
head(rownames(a), 3)
a [1:2]
a [1:5]
print(a)
packages <- available.packages()
print(packages)
install.packages(c( “slidify”, “ggplot2”))
install.packages(c( "slidify", "ggplot2"))
install.packages(‘ggplot2’)
install.packages(‘ggplot2’)
library(ggplot2)
# The iris dataset is proposed by R
head(iris)
# basic scatterplot
ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width)) +
geom_point()
ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width)) + geom_point()
c []
c <- 'a'
c <- 1
prprint())
print(c)
if( numero > 10 ){
print(“maior que dez”)
} else {
print(“menor ou igual a dez”)
}
if( numero > 10 ){
print(“maior que dez”)
} else {
print(“menor ou igual a dez”)
}
if( numero > 10 ){
print("maior que dez")
} else if (numero == 0){
print("menor ou igual a dez")
}
numero <- 1
if( numero > 10 ){
print("maior que dez")
} else if (numero == 0){
print("menor ou igual a dez")
}
if( numero > 10 ){
print("maior que dez")
} else if (numero == 1){
print("menor ou igual a dez")
}
if( numero > 10 ){
print("maior que dez")
} else if (numero == 1){
print("menor ou igual a dez")
}
bool <- numero > 10
print(bool)
install.packages("ggplot2")
library(ggplot2)
head(iris)
ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width)) + geom_point()
set.seed(7)
library(mlbench)
install.packages(c("caret", "mlbench"))
data(PimaIndiansDiabetes)
data(PimaIndiansDiabetes)
correlationMatrix <- cor(PimaIndiansDiabetes[,1:8])
data(PimaIndiansDiabetes)
PimaIndiansDiabetes
correlationMatrix <- cor(iris)
iris
correlationMatrix <- cor(iris[,1:6])
iris[,1:6]
iris[1:6]
iris
library(tibble)
list.files(path = ".", pattern = NULL, all.files = FALSE,
full.names = FALSE, recursive = FALSE,
ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)
list.files(path = ".", pattern = NULL, all.files = FALSE,
full.names = FALSE, recursive = FALSE,
ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)
setwd(paste(getwd(), "/r-worksheet", sep = "")) # SETING WORK DIRECTORY
getwd() # GET WORKING DIRECTORY
mydata1 = read.csv("example.csv") # import CSV
mydata2 = read.csv("example.csv")
head(mydata1) # first 5 rows of data frame
tail(mydata1) # last 5 rows of data frame
nrow(mydata1) # number of rows of data frame
setwd(paste(getwd(), "/r-worksheet", sep = "")) # SETING WORK DIRECTORY
getwd() # GET WORKING DIRECTORY
mydata1 = read.csv("example.csv") # import CSV
mydata2 = read.csv("example.csv")
head(mydata1) # first 5 rows of data frame
tail(mydata1) # last 5 rows of data frame
nrow(mydata1) # number of rows of data frame
myfulldata = rbind(mydata1, mydata2, mydata1) # append files
myfulldata = rbind(mydata1, mydata2, mydata1, mydata2) # append files
list.files(path = ".", pattern = "*.csv", all.files = FALSE,
full.names = FALSE, recursive = FALSE,
ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)
list.files(path = ".", pattern = "$.csv", all.files = FALSE,
full.names = FALSE, recursive = FALSE,
ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)
list.files(path = ".", pattern = "*.csv|*.txt", all.files = FALSE,
full.names = FALSE, recursive = FALSE,
ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)
list.files(path = ".", pattern = "*.csv|*.txt", all.files = FALSE,
full.names = FALSE, recursive = FALSE,
ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)
list.files(path = ".", pattern = "*.csv|*.txt", all.files = FALSE,
full.names = FALSE, recursive = FALSE,
ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)
tseFileNames =list.files(path = ".", pattern = "*.csv|*.txt", all.files = FALSE,
full.names = FALSE, recursive = FALSE,
ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)
#GET ALL TXT AN CSV FILES
tseFileNames
tseFileNames[1]
rbind(tseFileNames)
teste = rbind(tseFileNames)
teste
TSEFiles =list.files(path = ".", pattern = "*.csv|*.txt", all.files = FALSE,
full.names = FALSE, recursive = FALSE,
ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE)
tables <- lapply(TSEFiles, read.csv, header = TRUE)
tables <- lapply(TSEFiles, read.csv)
tables <- lapply(TSEFiles, read.csv, header = TRUE) #review this
TSEFiles
TSEFiles =list.files(path = ".", pattern = "*.csv|*.txt") #GET ALL TXT AN CSV FILES
TSEFiles
tables <- lapply(TSEFiles, read.csv, header = TRUE) #review this
tables <- lapply(TSEFiles, read.csv) #review this
TSEFiles =list.files(path = ".", pattern = "*.csv|*.txt") #GET ALL TXT AN CSV FILES
TSEFiles
tables <- lapply(TSEFiles, read.csv, header = TRUE) #review this
TSEFiles =list.files(path = ".", pattern = "*.csv|*.txt")
TSEFiles
tables <- lapply(TSEFiles, read.csv, header = TRUE) #review this
print(tables)
mydata1 = read.csv("votacao/votacao_candidato_munzona_2016_AC.csv") # import CSV
mydata1
head(mydata1)
mydata1['SG_UF']
mydata1['SG_UF']
head(mydata1)
nrow(mydata1)
nrow(mydata1)
mydata1[1]
mydata1 = read.csv("votacao/votacao_candidato_munzona_2016_AC.csv", sep = ";") # import CSV
head(mydata1)
mydata1[1]
mydata1[1:1]
nrow(mydata1)
mydata1[1,]
mydata1[1,1]
mydata1[1,2]
mydata1[1,5]
mydata1[1,1:5]
mydata1[1,]
mydata1[5,]
mydata1[1,]
mydata1[1,1:5]
mydata1[1,1:8]
mydata1[1,1:10]
mydata1 = read.csv("votacao/votacao_candidato_munzona_2016_AC.csv", sep = ";") # import CSV
acreElections = read.csv("votacao/votacao_candidato_munzona_2016_AC.csv", sep = ";") # import CSV
TSEFiles = list.files(path = "/votacao/", pattern = "*.csv|*.txt")
print(TSEFiles)
TSEFiles
TSEFiles = list.files(path = "/votacao", pattern = "*.csv|*.txt")
TSEFiles
setwd(paste(getwd(), "/r-worksheet", sep = "")) # SETING WORK DIRECTORY
getwd() # GET WORKING DIRECTORY
TSEFiles = list.files(path = "votacao/", pattern = "*.csv|*.txt")
TSEFiles
myReadCsv <- function(fileName) {
return(read.csv(fileName), sep=";")
}
tse_all_elections <- lapply(TSEFiles, myReadCsv, header = TRUE) #review this
tables <- lapply(TSEFiles, read.csv, sep = ";") #review this
TSEFiles
tables <- lapply(TSEFiles, read.csv, sep = ";") #review this
tables <- lapply(TSEFiles, read.csv, sep = ";", header= True
tables
tables
tables <- lapply(TSEFiles, read.csv, sep = ";", header= True) #review this
TSEFiles
tables <- lapply(TSEFiles, read.csv, sep = ";", header= True)
setwd(paste(getwd(), "/r-worksheet/votacao", sep = ""))
setwd(paste(getwd(), "/votacao", sep = ""))
tables <- lapply(TSEFiles, read.csv, sep = ";", header= True) #review this
tables <- lapply(TSEFiles, read.csv, sep = ";", header= true) #review this
tables <- lapply(TSEFiles, read.csv, sep = ";") #review this
tables <- lapply(TSEFiles, read.csv, sep = ";",  header=FALSE, stringsAsFactors=FALSE, fileEncoding="latin1") #review this
tables
tables <- lapply(TSEFiles, read.csv, sep = ";", header=FALSE, stringsAsFactors=FALSE, fileEncoding="latin1")
head(tables)
tables[1,]
tables[1]
View(tables)
head(tables[1])
tables[1][1,1:5]
tables[1][1,]
tables[1]
length(tables)
for (i in length(tables))
print(i)
for (i in length(tables)){
print(i)
}
for (i in 1:length(tables)){
print(i)
}
testeee  =rbind(tables)
nrow(testeeee)
nrow(testeee)
nrow
head(teste)
head(testeee)
teste[1,]
testeeee[1,]
testeee[1,]
tables <- lapply(TSEFiles, read.csv, sep = ";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
TABLES
tables
View(testeee)
summary(tables["NR_TURNO"])
count(tables["NR_TURNO"])
summary(tables["NR_TURNO"])
count(tables["CD_ELEICAO"])
summary(tables["CD_ELEICAO"])
summary(tables["SG_UF"])
tables["SG_UF"]
teste = rbind(tables)
View(testeee)
View(testeee)
View(testeee)
teste["SG_UF"]
for (i in 1:length(tables)){
temp_dataset <- tables[i]
finalDataset <- rbind(finalDataset, temp_dataset)
}
finalDataset = NULL
for (i in 1:length(tables)){
temp_dataset <- tables[i]
finalDataset <- rbind(finalDataset, temp_dataset)
}
finalDataset["SG_UF"]
finalDataset["UF_SG"]
head(tables[1])
head(tables[1])
head(tables[2])
head(tables[2, 1:5])
tables[2][1,1:5]
tables[2][1:5]
tables[2][1:1]
tables[1]
tables[1][1]
tables[1][1]
tables["NM_COLIGACAO"]
tables[1]["NM_COLIGACAO"]
View(tables)
View(tables)
TSEFiles = list.files(path = "votacao/", pattern = "*.csv|*.txt")  #GET ALL TXT AN CSV FILES
TSEFiles
TSEFiles
setwd(paste(getwd(), "/votacao", sep = ""))
GETWD
getwd()
TSEFiles = list.files(path = ".", pattern = "*.csv|*.txt")  #GET ALL TXT AN CSV FILES
TSEFiles
