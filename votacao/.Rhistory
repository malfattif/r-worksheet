geom_bar() +
scale_fill_hue() +
labs(x = "Motivo", y = "Quantidade", title = "Maiores Motivos de cassação") +
theme_minimal()
ggplot(maioresMotivosCassacao[1:3, ]) +
aes(x = DS_MOTIVO_CASSACAO, fill = DS_MOTIVO_CASSACAO, weight = n) +
geom_bar() +
scale_fill_hue() +
labs(x = "Motivo", y = "Quantidade", title = "Maiores Motivos de cassação") +
theme_minimal()
esquisser(viewer = "browser", data=maioresMotivosCassacao[1:3,])
ggplot(maioresMotivosCassacao[1:3, ]) +
aes(x = DS_MOTIVO_CASSACAO, fill = DS_MOTIVO_CASSACAO, weight = n) +
geom_bar() +
scale_fill_hue() +
labs(x = "Motivos", y = "Quantidade", title = "Maiores motivos de cassação RS", fill = "Motivos de cassação") +
coord_flip() +
theme_minimal()
ggplot(motivos[1:3, ]) +
aes(x = DS_MOTIVO_CASSACAO, fill = DS_MOTIVO_CASSACAO, weight = n) +
geom_bar() +
scale_fill_hue() +
labs(x = "Motivos", y = "Quantidade", title = "Maiores motivos de cassação RS", fill = "Motivos de cassação") +
coord_flip() +
theme_minimal()
ggplot(motivos[1:3, ]) +
aes(x = DS_MOTIVO_CASSACAO, fill = DS_MOTIVO_CASSACAO, weight = n) +
geom_bar() +
scale_fill_hue() +
labs(x = "Motivos", y = "Quantidade", title = "Maiores motivos de cassação RS", fill = "Motivos de cassação") +
coord_flip() +
theme_minimal()
motivos <- count(cassados, DS_MOTIVO_CASSACAO) %>% arrange(desc(n))
ggplot(motivos[1:3, ]) +
aes(x = DS_MOTIVO_CASSACAO, fill = DS_MOTIVO_CASSACAO, weight = n) +
geom_bar() +
scale_fill_hue() +
labs(x = "Motivos", y = "Quantidade", title = "Maiores motivos de cassação RS", fill = "Motivos de cassação") +
coord_flip() +
theme_minimal()
motivos[1:3, ]
ggplot(motivos[1:3, ]) +
aes(x = DS_MOTIVO_CASSACAO, fill = DS_MOTIVO_CASSACAO, weight = n) +
geom_bar() +
scale_fill_hue() +
labs(x = "Motivos", y = "Quantidade", title = "Maiores motivos de cassação RS", fill = "Motivos de cassação") +
theme_minimal()
cassadosFiles = list.files(path = "../cassacao", pattern = "*.csv|*.txt")  #GET ALL TXT AN CSV FILES
cassadosFiles
cassadosFiles = list.files(path = "../cassacao", pattern = "*.csv|*.txt")  #GET ALL TXT AN CSV FILES
for (file in cassadosFiles) {
if (!exists("cassados")){
cassados <- read.csv(file, sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
}
else if (exists("cassados")){
temp_dataset <- read.csv(file, sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
dataset<- rbind(cassados, temp_dataset)
rm(temp_dataset)
}
}
for (file in cassadosFiles) {
if (!exists("cassados")){
cassados <- read.csv(file, sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
}
else if (exists("cassados")){
temp_dataset <- read.csv(file, sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
dataset<- rbind(cassados, temp_dataset)
rm(temp_dataset)
}
}
" a" +" b"
paste("a", "b")
paste("a", "b", "")
paste("a", "b", "c")
paste("a", "b", sep = "")
for (file in cassadosFiles) {
if (!exists("cassados")){
cassados <- read.csv(paste("../cassacao", file, "/"), sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
}
else if (exists("cassados")){
temp_dataset <- read.csv(paste("../cassacao", file, "/"), sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
dataset<- rbind(cassados, temp_dataset)
rm(temp_dataset)
}
}
for (file in cassadosFiles) {
if (!exists("cassados")){
cassados <- read.csv(paste("../cassacao", file, sep="/"), sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
}
else if (exists("cassados")){
temp_dataset <- read.csv(paste("../cassacao", file, sep="/"), sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
dataset<- rbind(cassados, temp_dataset)
rm(temp_dataset)
}
}
nrow(cassados)
cassadosRS <- read.csv("../cassacao/motivo_cassacao_2016_RS.csv", sep=";")
nrow(cassadosRS)
cassadosFiles
rm(cassados)
for (file in cassadosFiles) {
if (!exists("cassados")){
cassados <- read.csv(paste("../cassacao", file, sep="/"), sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
}
else if (exists("cassados")){
temp_dataset <- read.csv(paste("../cassacao", file, sep="/"), sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
dataset<- rbind(cassados, temp_dataset)
rm(temp_dataset)
}
}
cassados
nrow(cassados)
nrows(cassadosRS)
nrow(cassadosRS)
for (file in cassadosFiles) {
if (!exists("cassados")){
cassados <- read.csv(paste("../cassacao", file, sep="/"), sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
}
else if (exists("cassados")){
temp_dataset <- read.csv(paste("../cassacao", file, sep="/"), sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
dataset<- rbind(cassados, temp_dataset)
console.log(nrow(cassados))
rm(temp_dataset)
}
}
for (file in cassadosFiles) {
if (!exists("cassados")){
cassados <- read.csv(paste("../cassacao", file, sep="/"), sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
}
else if (exists("cassados")){
temp_dataset <- read.csv(paste("../cassacao", file, sep="/"), sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
dataset<- rbind(cassados, temp_dataset)
print(nrow(cassados))
rm(temp_dataset)
}
}
for (file in cassadosFiles) {
if (!exists("cassados")){
cassados <- read.csv(paste("../cassacao", file, sep="/"), sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
}
else if (exists("cassados")){
temp_dataset <- read.csv(paste("../cassacao", file, sep="/"), sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
dataset<- rbind(cassados, temp_dataset)
print(paste("../cassacao", file, sep="/"))
rm(temp_dataset)
}
}
getwd()
for (file in cassadosFiles) {
if (!exists("cassados")){
cassados <- read.csv(paste("../cassacao", file, sep="/"), sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
}
else if (exists("cassados")){
temp_dataset <- read.csv(paste("../cassacao", file, sep="/"), sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
cassados<- rbind(cassados, temp_dataset)
rm(temp_dataset)
}
}
nrow(cassados)
cassadoS100kVotes <-
dataset %>%
select(QT_VOTOS_NOMINAIS) %>%
group_by(NM_URNA_CAND, NM_MUNICIPIO) %>%
summarise(QT_TOTAL_VOTOS = sum(QT_VOTOS_NOMINAIS, na.rm = TRUE)) %>%
filter(QT_TOTAL_VOTOS >= 1000000) %>%
arrange(desc(QT_TOTAL_VOTOS))
library(dplyr)
moreThan1kk <-
dataset %>%
select(NM_URNA_CANDIDATO, QT_VOTOS_NOMINAIS) %>%
group_by(NM_URNA_CANDIDATO) %>%
summarise(QT_TOTAL_VOTOS = sum(QT_VOTOS_NOMINAIS, na.rm = TRUE)) %>%
filter(QT_TOTAL_VOTOS > 1000000) %>%
arrange(desc(QT_TOTAL_VOTOS))
cassadoS100kVotes <-
dataset %>%
select(QT_VOTOS_NOMINAIS) %>%
group_by(NM_URNA_CAND, NM_MUNICIPIO) %>%
summarise(QT_TOTAL_VOTOS = sum(QT_VOTOS_NOMINAIS, na.rm = TRUE)) %>%
filter(QT_TOTAL_VOTOS >= 1000000) %>%
arrange(desc(QT_TOTAL_VOTOS))
source('C:/Users/1513 IRON/Desktop/Projetos/ProjetosGIT/r-worksheet/data_frames.R', encoding = 'UTF-8', echo=TRUE)
cassadoS100kVotes <-
dataset %>%
group_by(NM_URNA_CAND, NM_MUNICIPIO) %>%
summarise(QT_TOTAL_VOTOS = sum(QT_VOTOS_NOMINAIS, na.rm = TRUE)) %>%
filter(QT_TOTAL_VOTOS >= 1000000) %>%
arrange(desc(QT_TOTAL_VOTOS))
source('C:/Users/1513 IRON/Desktop/Projetos/ProjetosGIT/r-worksheet/data_frames.R', encoding = 'UTF-8', echo=TRUE)
cassadoS100kVotes <-
dataset %>%
group_by(NM_URNA_CANDIDATO, NM_MUNICIPIO) %>%
summarise(QT_TOTAL_VOTOS = sum(QT_VOTOS_NOMINAIS, na.rm = TRUE)) %>%
filter(QT_TOTAL_VOTOS >= 1000000) %>%
arrange(desc(QT_TOTAL_VOTOS))
for (file in TSEFiles) {
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <- read.csv(file, sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
}
# if the merged dataset does exist, append to it
else if (exists("dataset")){
temp_dataset <- read.csv(file, sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
dataset<- rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
dataset$NM
getwd()
for (file in TSEFiles) {
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <- read.csv(file, sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
}
# if the merged dataset does exist, append to it
else if (exists("dataset")){
temp_dataset <- read.csv(file, sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
dataset<- rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
for (file in TSEFiles) {
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <- read.csv(file, sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
}
# if the merged dataset does exist, append to it
else if (exists("dataset")){
temp_dataset <- read.csv(file, sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
dataset<- rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
TSEFiles = list.files(path = ".", pattern = "*.csv|*.txt")  #GET ALL TXT AN CSV FILES
for (file in TSEFiles) {
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <- read.csv(file, sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
}
# if the merged dataset does exist, append to it
else if (exists("dataset")){
temp_dataset <- read.csv(file, sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
dataset<- rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
TSEFiles = list.files(path = ".", pattern = "*.csv|*.txt")  #GET ALL TXT AN CSV FILES
TSEFiles = list.files(path = ".", pattern = "*.csv|*.txt")  #GET ALL TXT AN CSV FILES
TSEFiles
source('C:/Users/1513 IRON/Desktop/Projetos/ProjetosGIT/r-worksheet/data_frames.R', encoding = 'UTF-8', echo=TRUE)
for (file in TSEFiles) {
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <- read.csv(file, sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
}
# if the merged dataset does exist, append to it
else if (exists("dataset")){
temp_dataset <- read.csv(file, sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
dataset<- rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
for (file in TSEFiles) {
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <- read.csv(file, sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
}
# if the merged dataset does exist, append to it
else if (exists("dataset")){
temp_dataset <- read.csv(file, sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
dataset<- rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
nrow(dataset)
TSEFiles = list.files(path = ".", pattern = "*.csv|*.txt")  #GET ALL TXT AN CSV FILES
TSEFiles
rm(dataset)
TSEFiles = list.files(path = ".", pattern = "*.csv|*.txt")  #GET ALL TXT AN CSV FILES
rm(dataset)
for (file in TSEFiles) {
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <- read.csv(file, sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
}
# if the merged dataset does exist, append to it
else if (exists("dataset")){
temp_dataset <- read.csv(file, sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
dataset<- rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
cassadoS100kVotes <-
dataset %>%
group_by(NM_URNA_CANDIDATO, NM_MUNICIPIO) %>%
summarise(QT_TOTAL_VOTOS = sum(QT_VOTOS_NOMINAIS, na.rm = TRUE)) %>%
filter(QT_TOTAL_VOTOS >= 1000000) %>%
arrange(desc(QT_TOTAL_VOTOS))
100kVotes <-
dataset %>%
group_by(NM_URNA_CANDIDATO, NM_MUNICIPIO) %>%
summarise(QT_TOTAL_VOTOS = sum(QT_VOTOS_NOMINAIS, na.rm = TRUE)) %>%
filter(QT_TOTAL_VOTOS >= 1000000) %>%
arrange(desc(QT_TOTAL_VOTOS))
head(moreThan100kVotes)
moreThan100kVotes
moreThan100kVotes <-
dataset %>%
group_by(NM_URNA_CANDIDATO, NM_MUNICIPIO) %>%
summarise(QT_TOTAL_VOTOS = sum(QT_VOTOS_NOMINAIS, na.rm = TRUE)) %>%
filter(QT_TOTAL_VOTOS >= 100000) %>%
arrange(desc(QT_TOTAL_VOTOS))
moreThan100kVotes
cassadosWithMoreThan100kVotes <- inner_join(moreThan100kVotes, cassados, by.X=NM_MUNICIPIO, by.x=NM_UE)
cassadosWithMoreThan100kVotes <- inner_join(moreThan100kVotes, cassados, by=c("NM_MUNICIPIO", "NM_UE"))
cassados$mc("NM_MUNICIPIO", "NM_UE")
c("NM_MUNICIPIO", "NM_UE")
cassadosWithMoreThan100kVotes <- inner_join(moreThan100kVotes, cassados, by=c("NM_MUNICIPIO", "NM_UE"))
moreThan100kVotes$NM_MUNICIPIO
cassados$NM_UE
cassados$NM_UE
cassadosWithMoreThan100kVotes <- inner_join(moreThan100kVotes, cassados, by=c("NM_MUNICIPIO" = "NM_UE"))
cassadosWithMoreThan100kVotes
cassadosWithMoreThan100kVotes
<- inner_join(moreThan100kVotes, cassados, by=c("NM_MUNICIPIO" = "NM_UE", "SG_UF" = "SG_UF"))
cassadosWithMoreThan100kVotes <- inner_join(moreThan100kVotes, cassados, by=c("NM_MUNICIPIO" = "NM_UE", "SG_UF" = "SG_UF"))
dataset$SG_UE
dataset$SG_UF
cassadosWithMoreThan100kVotes <- inner_join(moreThan100kVotes, cassados, by=c("NM_MUNICIPIO" = "NM_UE", "SG_UF"))
moreThan100kVotes <-
dataset %>%
group_by(NM_URNA_CANDIDATO, NM_MUNICIPIO, SG_UF) %>%
summarise(QT_TOTAL_VOTOS = sum(QT_VOTOS_NOMINAIS, na.rm = TRUE)) %>%
filter(QT_TOTAL_VOTOS >= 100000) %>%
arrange(desc(QT_TOTAL_VOTOS))
cassadosWithMoreThan100kVotes <- inner_join(moreThan100kVotes, cassados, by=c("NM_MUNICIPIO" = "NM_UE", "SG_UF"))
cassadosWithMoreThan100kVotes
cassadosWithMoreThan100kVotes <- inner_join(moreThan100kVotes, cassados, by=c("NM_MUNICIPIO" = "NM_UE", "SG_UF"))
cassadosWithMoreThan100kVotes
cassados
cassadosWithMoreThan100kVotes <- inner_join(moreThan100kVotes, cassados, by=SQ_CANDIDATO)
moreThan100kVotes <-
dataset %>%
group_by(NM_URNA_CANDIDATO, NM_MUNICIPIO, SQ_CANDIDATO) %>%
summarise(QT_TOTAL_VOTOS = sum(QT_VOTOS_NOMINAIS, na.rm = TRUE)) %>%
filter(QT_TOTAL_VOTOS >= 100000) %>%
arrange(desc(QT_TOTAL_VOTOS))
cassadosWithMoreThan100kVotes <- inner_join(moreThan100kVotes, cassados, by=SQ_CANDIDATO)
cassados$NM
cassadosWithMoreThan100kVotes <- inner_join(moreThan100kVotes, cassados, by=SQ_CANDIDATO)
cassados$SQ_CANDIDATO
moreThan100kVotes$SQ_CANDIDATO
cassadosWithMoreThan100kVotes <- inner_join(moreThan100kVotes, cassados, by="SQ_CANDIDATO")
cassadosWithMoreThan100kVotes
moreThan100kVotes <-
dataset %>%
group_by(NM_URNA_CANDIDATO, NM_MUNICIPIO, SQ_CANDIDATO) %>%
summarise(QT_TOTAL_VOTOS = sum(QT_VOTOS_NOMINAIS, na.rm = TRUE)) %>%
filter(QT_TOTAL_VOTOS >= 10000) %>%
arrange(desc(QT_TOTAL_VOTOS))
cassadosWithMoreThan100kVotes <- inner_join(moreThan100kVotes, cassados, by="SQ_CANDIDATO")
moreThan50kVotes <-
dataset %>%
group_by(NM_URNA_CANDIDATO, NM_MUNICIPIO, SQ_CANDIDATO) %>%
summarise(QT_TOTAL_VOTOS = sum(QT_VOTOS_NOMINAIS, na.rm = TRUE)) %>%
filter(QT_TOTAL_VOTOS >= 70000) %>%
arrange(desc(QT_TOTAL_VOTOS))
cassadosWithMoreThan50kVotes <- inner_join(moreThan100kVotes, cassados, by="SQ_CANDIDATO")
cassadosWithMoreThan50kVotes
moreThan70kVotes <-
dataset %>%
group_by(NM_URNA_CANDIDATO, NM_MUNICIPIO, SQ_CANDIDATO) %>%
summarise(QT_TOTAL_VOTOS = sum(QT_VOTOS_NOMINAIS, na.rm = TRUE)) %>%
filter(QT_TOTAL_VOTOS >= 70000) %>%
arrange(desc(QT_TOTAL_VOTOS))
cassadosWithMoreThan70kVotes <- inner_join(moreThan70kVotes, cassados, by="SQ_CANDIDATO")
cassadosWithMoreThan70kVotes
moreThan70kVotes <-
dataset %>%
group_by(NM_URNA_CANDIDATO, NM_MUNICIPIO, SQ_CANDIDATO) %>%
summarise(QT_TOTAL_VOTOS = sum(QT_VOTOS_NOMINAIS, na.rm = TRUE)) %>%
filter(QT_TOTAL_VOTOS >= 60000) %>%
arrange(desc(QT_TOTAL_VOTOS))
cassadosWithMoreThan70kVotes <- inner_join(moreThan70kVotes, cassados, by="SQ_CANDIDATO")
cassadosWithMoreThan70kVotes
moreThan50kVotes <-
dataset %>%
group_by(NM_URNA_CANDIDATO, NM_MUNICIPIO, SQ_CANDIDATO) %>%
summarise(QT_TOTAL_VOTOS = sum(QT_VOTOS_NOMINAIS, na.rm = TRUE)) %>%
filter(QT_TOTAL_VOTOS >= 50000) %>%
arrange(desc(QT_TOTAL_VOTOS))
cassadosWithMoreThan50kVotes <- inner_join(moreThan50kVotes, cassados, by="SQ_CANDIDATO")
cassadosWithMoreThan50kVotes
moreThan50kVotes <-
dataset %>%
group_by(NM_URNA_CANDIDATO, NM_MUNICIPIO, SQ_CANDIDATO) %>%
summarise(QT_TOTAL_VOTOS = sum(QT_VOTOS_NOMINAIS, na.rm = TRUE)) %>%
filter(QT_TOTAL_VOTOS >= 50000) %>%
arrange(desc(QT_TOTAL_VOTOS))
cassadosWithMoreThan50kVotes <- inner_join(moreThan50kVotes, cassados, by="SQ_CANDIDATO")
cassadosWithMoreThan50kVotes
library(ggplot2)
ggplot(motivos[1:3, ]) +
aes(x = DS_MOTIVO_CASSACAO, fill = DS_MOTIVO_CASSACAO, weight = n) +
geom_bar() +
scale_fill_hue() +
labs(x = "Motivos", y = "Quantidade", title = "Maiores motivos de cassação RS", fill = "Motivos de cassação") +
theme_minimal()
motivos <- count(cassados, DS_MOTIVO_CASSACAO) %>% arrange(desc(n))
motivos
ggplot(motivos[1:4, ]) +
aes(x = DS_MOTIVO_CASSACAO, fill = DS_MOTIVO_CASSACAO, weight = n) +
geom_bar() +
scale_fill_hue() +
labs(x = "Motivos", y = "Quantidade", title = "Maiores motivos de cassação RS", fill = "Motivos de cassação") +
theme_minimal()
ggplot(motivos[1:3, ]) +
aes(x = DS_MOTIVO_CASSACAO, fill = DS_MOTIVO_CASSACAO, weight = n) +
geom_bar() +
scale_fill_hue() +
labs(x = "Motivos", y = "Quantidade", title = "Maiores motivos de cassação RS", fill = "Motivos de cassação") +
theme_minimal()
unique(dataset$DS_SITUACAO_CANDIDATURA)
unique(dataset$DS_SIT_TOT_TURNO)
files2012 = list.files(path = "votacao2012/", pattern = "*.csv|*.txt")  #GET ALL TXT AN CSV FILES
files2012
getwd()
files2012 = list.files(path = "../votacao2012/", pattern = "*.csv|*.txt")  #GET ALL TXT AN CSV FILES
files2012
files2012
rm(dataset2012)
for (file in files2012) {
if (!exists("dataset2012")){
dataset2012 <- read.csv(file, sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
}
else if (exists("dataset2012")){
temp_dataset <- read.csv(file, sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
dataset2012<- rbind(dataset2012, temp_dataset)
rm(temp_dataset)
}
}
rm(dataset2012)
for (file in files2012) {
if (!exists("dataset2012")){
dataset2012 <- read.csv(paste("../votacao2012/", file, sep="/"), sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
}
else if (exists("dataset2012")){
temp_dataset <- read.csv(paste("../votacao2012/", file, sep="/"), sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
dataset2012<- rbind(dataset2012, temp_dataset)
rm(temp_dataset)
}
}
files2012 = list.files(path = "../votacao2012/", pattern = "*.csv|*.txt")  #GET ALL TXT AN CSV FILES
files2012
dataset2012 <- read.csv("../votacao2012/votacao_candidato_munzona_2012_AC", sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
dataset2012 <- read.ftable("../votacao2012/votacao_candidato_munzona_2012_AC", sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
dataset2012 <- read.delim("../votacao2012/votacao_candidato_munzona_2012_AC", sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
dataset2012 <- read.delim("../votacao2012/votacao_candidato_munzona_2012_AC", sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
dataset2012 <- read.csv("../votacao2012/votacao_candidato_munzona_2012_AC", sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
dataset2012 <- read.csv("../votacao2012/votacao_candidato_munzona_2012_AC", sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
getwd()
dataset2012 <- read.delim("../votacao2012/votacao_candidato_munzona_2012_AC", sep=";", fileEncoding="latin1")
dataset2012 <- read.delim("../votacao2012/votacao_candidato_munzona_2012_AC", sep=";")
dataset2012 <- read.delim("../votacao2012/votacao_candidato_munzona_2012_AC",sep = =";")
dataset2012 <- read.delim("../votacao2012/votacao_candidato_munzona_2012_AC",sep =";")
dataset2012 <- read.delim("../votacao2012/votacao_candidato_munzona_2012_AC.txt",sep =";")
dataset2012
dataset2012 <- read.delim("../votacao2012/votacao_candidato_munzona_2012_AC.txt",sep =";",  stringsAsFactors=FALSE, fileEncoding="latin1")
dataset2012
dataset2012 <- read.delim("../votacao2012/votacao_candidato_munzona_2012_AC.txt",sep =";",  stringsAsFactors=FALSE, fileEncoding="latin1")
files2012
files2012
dataset2012 <- read.delim("../votacao2012/votacao_candidato_munzona_2012_AC.txt",sep =";",  stringsAsFactors=FALSE, fileEncoding="latin1")
dataset2012
files2012 = list.files(path = "../votacao2012/", pattern = "*.csv|*.txt")  #GET ALL TXT AN CSV FILES
for (file in files2012) {
if (!exists("dataset2012")){
dataset2012 <- read.csv(paste("../votacao2012/", file, sep="/"), sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
}
else if (exists("dataset2012")){
temp_dataset <- read.csv(paste("../votacao2012/", file, sep="/"), sep=";", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
dataset2012<- rbind(dataset2012, temp_dataset)
rm(temp_dataset)
}
}
dataset2012
dataset2012[1,]
unique(dataset$SQ_COLIGACAO)
unique(dataset$NM_COLIGACAO)
unique(dataset$NM_COLIGACAO)
unique(dataset$SQ_COLIGACAO)
unique(dataset$DS_COMPOSICAO_COLIGACAO)
unique(dataset$DS_COMPOSICAO_COLIGACAO)
str_count(dataset$DS_COMPOSICAO_COLIGACAO, pattern = "\//")
str_count(dataset$DS_COMPOSICAO_COLIGACAO, pattern = "\\")
str_count(dataset$DS_COMPOSICAO_COLIGACAO, pattern = "\\\")
str_count(dataset$DS_COMPOSICAO_COLIGACAO, pattern = "\")
install.packages("stringr")
library(stringr)
str_count(dataset$DS_COMPOSICAO_COLIGACAO, pattern = "\\\")
str_count(dataset$DS_COMPOSICAO_COLIGACAO, pattern = "\\")
str_count(dataset$DS_COMPOSICAO_COLIGACAO, pattern = "\")
teste <- "teste"
teste <- "teste\"
teste <- "teste\\"
teste <- "teste\\\"
teste
teste <- "teste\\/"
teste <- "teste\/"
teste <- "teste/"
str_count(teste, pattern = "/")
dataset$NM_URNA_CANDIDATO
